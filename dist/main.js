(()=>{"use strict";const e=document.querySelector("#content"),t=document.createElement("head"),l=document.createElement("main"),n=document.createElement("footer");e.appendChild(t),e.appendChild(l),e.appendChild(n);const r=(e,t)=>{let l=document.createElement("td");return l.classList.add("playerGrid"),l.dataset.row=e,l.dataset.col=t,l},i=e=>{let t=document.createElement("th");return t.textContent=e,t},a=e=>{let t=document.createElement("tr");t.dataset.row=e,t.appendChild(i(e));for(let l=0;l<10;l++)t.appendChild(r(e,l));return t},d=e=>{const t=document.querySelector("#content");let l=(()=>{const e=document.createElement("table");e.appendChild((()=>{let e=document.createElement("tr");return e.appendChild(i("&nbsp;")),e.appendChild(i("A")),e.appendChild(i("B")),e.appendChild(i("C")),e.appendChild(i("D")),e.appendChild(i("E")),e.appendChild(i("F")),e.appendChild(i("G")),e.appendChild(i("H")),e.appendChild(i("I")),e.appendChild(i("J")),e})());for(let t=0;t<10;t++)e.appendChild(a(t));return e})();t.appendChild(l),((e,t)=>{for(let l=0;l<10;l++)for(let n=0;n<10;n++)if(e[l][n]){let e=t.children[l+1].children[n+1],r=document.createElement("div");r.classList.add("ship"),r.textContent="s",e.appendChild(r)}})(e,l)},o=(e,t="noID",l="south")=>{const n=t,r=e,i=l;let a=0,d=!1;return{getHitsSustained:()=>a,hit:()=>{a++,a===r&&(d=!0)},isSunk:()=>d,getLength:()=>r,getDirection:()=>i,getID:()=>n}},p=()=>{const e=Array(10).fill().map((()=>Array(10).fill(null))),t=Array(10).fill().map((()=>Array(10).fill(null))),l=[],n=(e,t)=>e>=0&&e<10&&t>=0&&t<10,r=(t,r,i)=>{if(!((t,l,r)=>{let i="south"===t.getDirection()?1:0,a="east"===t.getDirection()?1:0;for(let d=0;d<t.getLength();d++){if(!n(l,r))return!1;if(null!=e[l][r])return!1;l+=i,r+=a}return!0})(t,r,i))throw new Error(`Failed to place ship ${t.getID()} at row: ${r}, col: ${i}`);l.push(t);let a="south"===t.getDirection()?1:0,d="east"===t.getDirection()?1:0;for(let l=0;l<t.getLength();l++)e[r][i]=t,r+=a,i+=d};return{placeShip:r,receiveAttack:(l,n)=>{t[l][n]="hit",e[l][n]&&e[l][n].hit()},isValidAttack:(e,l)=>n(e,l)&&null===t[e][l],isDefeated:()=>{for(let e of l)if(!e.isSunk())return!1;return!0},initDefaultShips:()=>{let e=o(4,"a","east");r(e,0,4),l.push(e);let t=o(2,"b","south");r(t,0,9),l.push(t);let n=o(2,"c","east");r(n,2,0),l.push(n);let i=o(3,"d","south");r(i,3,4),l.push(i);let a=o(1,"e","south");r(a,3,6),l.push(a);let d=o(3,"f","south");r(d,4,9),l.push(d);let p=o(2,"g","east");r(p,5,0),l.push(p);let c=o(1,"h");r(c,8,0),l.push(c);let h=o(1,"i");r(h,9,5),l.push(h);let s=o(1,"j");r(s,9,9),l.push(s)},getShipGrid:()=>e}};(()=>{let e=(()=>{const e=p(),t=p();e.initDefaultShips();const l=(e=>{let t=()=>Math.floor(10*Math.random());return{pickTargetSimple:()=>{let l=t(),n=t();for(;!e.isValidAttack(l,n);)l=t(),n=t();return{row:l,col:n}}}})(t);let n;return{runGameLoop:()=>{for(;n=getPlayerAttackCoordinates(),t.receiveAttack(n.row,n.col),!t.isDefeated()&&(n=l.pickTargetSimple(),e.receiveAttack(n.row,n.col),!e.isDefeated()););},getShipGrid:()=>e.getShipGrid()}})();d(e.getShipGrid())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LElBQ1RyRCxFQUdrRixFQXdENUUsTUFDakIsSUFBSXNELEVBaENrQixNQUN0QixNQUFNQyxFQUFlL0IsSUFDZmdDLEVBQWlCaEMsSUFDdkIrQixFQUFhYixtQkFDYixNQUFNZSxFQTFCeUIsQ0FBQ0MsSUFDaEMsSUFFSUMsRUFBVSxJQUNIQyxLQUFLQyxNQUFzQixHQUFoQkQsS0FBS0UsVUFZM0IsTUFBTyxDQUFFQyxpQkFWYyxLQUNuQixJQUFJdkUsRUFBTW1FLElBQ05sRSxFQUFNa0UsSUFDVixNQUFPRCxFQUFNbEIsY0FBY2hELEVBQUtDLElBQzVCRCxFQUFNbUUsSUFDTmxFLEVBQU1rRSxJQUVWLE1BQU8sQ0FBQ25FLE1BQUtDLE1BQUksRUFHTSxFQVVDdUUsQ0FBMkJSLEdBQ3ZELElBQUlTLEVBdUJKLE1BQU8sQ0FBRUMsWUF0QlcsS0FDaEIsS0FFSUQsRUFBaUJFLDZCQUNqQlgsRUFBZWpCLGNBQWMwQixFQUFlekUsSUFBS3lFLEVBQWV4RSxNQUM3RCtELEVBQWVmLGVBS2xCd0IsRUFBaUJSLEVBQW9CTSxtQkFDckNSLEVBQWFoQixjQUFjMEIsRUFBZXpFLElBQUt5RSxFQUFleEUsTUFDM0Q4RCxFQUFhZCxnQkFJcEIsRUFNa0JZLFlBSkYsSUFDVEUsRUFBYUYsY0FHVyxFQUl4QmUsR0FDWHJFLEVBQU11RCxFQUFLRCxjQUFjLEVBSzdCZ0IsRSIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvdmlld0NvbnRyb2xsZXIuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRlbnRcIik7XG5cbmNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoZWFkXCIpO1xuY29uc3QgbWFpbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJtYWluXCIpO1xuY29uc3QgZm9vdGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvb3RlclwiKTtcblxuY29udGFpbmVyLmFwcGVuZENoaWxkKGhlYWRlcik7XG5jb250YWluZXIuYXBwZW5kQ2hpbGQobWFpbik7XG5jb250YWluZXIuYXBwZW5kQ2hpbGQoZm9vdGVyKTtcblxuY29uc3QgY3JlYXRlQ2VsbCA9IChteVJvdywgbXlDb2wpID0+IHtcbiAgbGV0IG91dHB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZFwiKTtcbiAgb3V0cHV0LmNsYXNzTGlzdC5hZGQoXCJwbGF5ZXJHcmlkXCIpO1xuICBvdXRwdXQuZGF0YXNldC5yb3cgPSBteVJvdztcbiAgb3V0cHV0LmRhdGFzZXQuY29sID0gbXlDb2w7XG4gIHJldHVybiBvdXRwdXRcbn1cblxuXG5jb25zdCBjcmVhdGVUYWJsZUhlYWRlciA9IChjb250ZW50KSA9PiB7XG4gIGxldCBvdXRwdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGhcIik7XG4gIG91dHB1dC50ZXh0Q29udGVudCA9IGNvbnRlbnQ7XG4gIHJldHVybiBvdXRwdXQ7XG59XG5cbmNvbnN0IGNyZWF0ZVRvcFJvdyA9ICgpID0+IHtcbiAgbGV0IHJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0clwiKTtcbiAgcm93LmFwcGVuZENoaWxkKGNyZWF0ZVRhYmxlSGVhZGVyKFwiJm5ic3A7XCIpKTtcbiAgcm93LmFwcGVuZENoaWxkKGNyZWF0ZVRhYmxlSGVhZGVyKFwiQVwiKSk7XG4gIHJvdy5hcHBlbmRDaGlsZChjcmVhdGVUYWJsZUhlYWRlcihcIkJcIikpO1xuICByb3cuYXBwZW5kQ2hpbGQoY3JlYXRlVGFibGVIZWFkZXIoXCJDXCIpKTtcbiAgcm93LmFwcGVuZENoaWxkKGNyZWF0ZVRhYmxlSGVhZGVyKFwiRFwiKSk7XG4gIHJvdy5hcHBlbmRDaGlsZChjcmVhdGVUYWJsZUhlYWRlcihcIkVcIikpO1xuICByb3cuYXBwZW5kQ2hpbGQoY3JlYXRlVGFibGVIZWFkZXIoXCJGXCIpKTtcbiAgcm93LmFwcGVuZENoaWxkKGNyZWF0ZVRhYmxlSGVhZGVyKFwiR1wiKSk7XG4gIHJvdy5hcHBlbmRDaGlsZChjcmVhdGVUYWJsZUhlYWRlcihcIkhcIikpO1xuICByb3cuYXBwZW5kQ2hpbGQoY3JlYXRlVGFibGVIZWFkZXIoXCJJXCIpKTtcbiAgcm93LmFwcGVuZENoaWxkKGNyZWF0ZVRhYmxlSGVhZGVyKFwiSlwiKSk7XG4gIHJldHVybiByb3c7XG59XG5cbmNvbnN0IGNyZWF0ZVJvdyA9IChyb3dOdW1iZXIpID0+IHtcbiAgbGV0IHJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0clwiKTtcbiAgcm93LmRhdGFzZXQucm93ID0gcm93TnVtYmVyO1xuICByb3cuYXBwZW5kQ2hpbGQoY3JlYXRlVGFibGVIZWFkZXIocm93TnVtYmVyKSk7XG4gIGZvcihsZXQgY29sID0gMDsgY29sIDwgMTA7IGNvbCsrKXtcbiAgICByb3cuYXBwZW5kQ2hpbGQoY3JlYXRlQ2VsbChyb3dOdW1iZXIsIGNvbCkpO1xuICB9XG4gIHJldHVybiByb3c7XG59XG5cbmNvbnN0IGNyZWF0ZVRhYmxlID0gKCkgPT4ge1xuICBjb25zdCBteVRhYmxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRhYmxlXCIpO1xuICBteVRhYmxlLmFwcGVuZENoaWxkKGNyZWF0ZVRvcFJvdygpKTtcbiAgZm9yKGxldCByb3cgPSAwOyByb3cgPCAxMDsgcm93Kyspe1xuICAgIG15VGFibGUuYXBwZW5kQ2hpbGQoY3JlYXRlUm93KHJvdykpO1xuICB9XG5cbiAgcmV0dXJuIG15VGFibGU7XG59XG5cbmNvbnN0IGRpc3BsYXlTaGlwcyA9IChzaGlwR3JpZCwgdGFibGUpID0+IHtcbiAgICBmb3IobGV0IHJvdyA9IDA7IHJvdyA8IDEwOyByb3crKyl7XG4gICAgICAgIGZvcihsZXQgY29sID0gMDsgY29sIDwgMTA7IGNvbCsrKXtcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coc2hpcEdyaWRbcm93XVtjb2xdKTtcbiAgICAgICAgICAgIGlmKHNoaXBHcmlkW3Jvd11bY29sXSl7XG4gICAgICAgICAgICAgICAgbGV0IHRhYmxlUm93ID0gdGFibGUuY2hpbGRyZW5bcm93ICsgMV07XG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnaGVsbG8nKTtcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKHRhYmxlUm93KTtcbiAgICAgICAgICAgICAgICBsZXQgY2VsbCA9IHRhYmxlUm93LmNoaWxkcmVuW2NvbCArIDFdO1xuICAgICAgICAgICAgICAgIGxldCBteURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICAgICAgbXlEaXYuY2xhc3NMaXN0LmFkZChcInNoaXBcIilcbiAgICAgICAgICAgICAgICBteURpdi50ZXh0Q29udGVudCA9IFwic1wiO1xuICAgICAgICAgICAgICAgIC8vY2VsbC50ZXh0Q29udGVudCA9IFwiYXNkZmFzXCI7XG4gICAgICAgICAgICAgICAgY2VsbC5hcHBlbmRDaGlsZChteURpdik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmNvbnN0IHNldFVwID0gKHNoaXBHcmlkKSA9PiB7XG4gICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb250ZW50XCIpO1xuICAgIGxldCB0YWJsZSA9IGNyZWF0ZVRhYmxlKCk7XG4gICAgLy9jb25zb2xlLmxvZyh0YWJsZS5jaGlsZHJlbik7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHRhYmxlKTtcbiAgICBkaXNwbGF5U2hpcHMoc2hpcEdyaWQsIHRhYmxlKTtcbn1cblxuZXhwb3J0IHsgXG4gICAgc2V0VXBcbn07IiwiaW1wb3J0IHsgXG4gICAgc2V0VXBcbn0gZnJvbSAnLi92aWV3Q29udHJvbGxlcic7XG5cbmNvbnN0IHNoaXBGYWN0b3J5ID0gKGxlbiwgc2hpcElEID0nbm9JRCcsIGRpciA9ICdzb3V0aCcpID0+IHtcbiAgICBjb25zdCBpZCA9IHNoaXBJRDtcbiAgICBjb25zdCBsZW5ndGggPSBsZW47XG4gICAgY29uc3QgZGlyZWN0aW9uID0gZGlyO1xuICAgIGxldCBoaXRzU3VzdGFpbmVkID0gMDtcbiAgICBsZXQgc3VuayA9IGZhbHNlO1xuXG4gICAgY29uc3QgZ2V0SGl0c1N1c3RhaW5lZCA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIGhpdHNTdXN0YWluZWQ7XG4gICAgfVxuICAgIGNvbnN0IGhpdCA9ICgpID0+IHtcbiAgICAgICAgaGl0c1N1c3RhaW5lZCsrO1xuICAgICAgICBpZihoaXRzU3VzdGFpbmVkID09PSBsZW5ndGgpe1xuICAgICAgICAgICAgc3VuayA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgaXNTdW5rID0gKCkgPT4ge1xuICAgICAgICByZXR1cm4gc3VuaztcbiAgICB9XG4gICAgY29uc3QgZ2V0TGVuZ3RoID0gKCkgPT4ge1xuICAgICAgICByZXR1cm4gbGVuZ3RoO1xuICAgIH1cbiAgICBjb25zdCBnZXREaXJlY3Rpb24gPSAoKSA9PiB7XG4gICAgICAgIHJldHVybiBkaXJlY3Rpb247XG4gICAgfVxuICAgIGNvbnN0IGdldElEID0gKCkgPT4ge1xuICAgICAgICByZXR1cm4gaWQ7XG4gICAgfVxuICAgIHJldHVybiB7IGdldEhpdHNTdXN0YWluZWQsIGhpdCwgaXNTdW5rLCBnZXRMZW5ndGgsIFxuICAgICAgICBnZXREaXJlY3Rpb24sIGdldElEIH07XG59XG5cbmNvbnN0IGdhbWVCb2FyZEZhY3RvcnkgPSAoKSA9PiB7XG4gICAgY29uc3Qgc2hpcEdyaWQgPSBBcnJheSgxMCkuZmlsbCgpLm1hcCgoKSA9PiBBcnJheSgxMCkuZmlsbChudWxsKSk7XG4gICAgY29uc3QgYXR0YWNrcyA9IEFycmF5KDEwKS5maWxsKCkubWFwKCgpID0+IEFycmF5KDEwKS5maWxsKG51bGwpKTtcbiAgICBjb25zdCBzaGlwQXJyID0gW107XG5cbiAgICBjb25zdCBpbkJvdW5kcyA9IChyb3csIGNvbCkgPT4ge1xuICAgICAgICByZXR1cm4gcm93ID49IDAgJiYgcm93IDwgMTAgJiYgY29sID49IDAgJiYgY29sIDwgMTA7XG4gICAgfVxuXG4gICAgY29uc3QgaXNWYWxpZFNoaXBQbGFjZW1lbnQgPSAoc2hpcCwgcm93LCBjb2wpID0+IHtcbiAgICAgICAgbGV0IHJvd01vZCA9IHNoaXAuZ2V0RGlyZWN0aW9uKCkgPT09ICdzb3V0aCcgPyAxIDogMDtcbiAgICAgICAgbGV0IGNvbE1vZCA9IHNoaXAuZ2V0RGlyZWN0aW9uKCkgPT09ICdlYXN0JyA/IDEgOiAwO1xuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgc2hpcC5nZXRMZW5ndGgoKTsgaSsrKXtcbiAgICAgICAgICAgIGlmKCFpbkJvdW5kcyhyb3csIGNvbCkpe1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzaGlwR3JpZFtyb3ddW2NvbF0gIT0gbnVsbCl7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcm93ID0gcm93ICsgKHJvd01vZCk7XG4gICAgICAgICAgICBjb2wgPSBjb2wgKyAoY29sTW9kKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBjb25zdCBwbGFjZVNoaXAgPSAoc2hpcCwgcm93LCBjb2wpID0+IHtcblxuICAgICAgICBpZighaXNWYWxpZFNoaXBQbGFjZW1lbnQoc2hpcCwgcm93LCBjb2wpKXtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHBsYWNlIHNoaXAgJHtzaGlwLmdldElEKCl9IGF0IHJvdzogJHtyb3d9LCBjb2w6ICR7Y29sfWApO1xuICAgICAgICB9XG5cbiAgICAgICAgc2hpcEFyci5wdXNoKHNoaXApO1xuICAgICAgICBsZXQgcm93TW9kID0gc2hpcC5nZXREaXJlY3Rpb24oKSA9PT0gJ3NvdXRoJyA/IDEgOiAwO1xuICAgICAgICBsZXQgY29sTW9kID0gc2hpcC5nZXREaXJlY3Rpb24oKSA9PT0gJ2Vhc3QnID8gMSA6IDA7XG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBzaGlwLmdldExlbmd0aCgpOyBpKyspe1xuICAgICAgICAgICAgc2hpcEdyaWRbcm93XVtjb2xdID0gc2hpcDtcbiAgICAgICAgICAgIHJvdyA9IHJvdyArIChyb3dNb2QpO1xuICAgICAgICAgICAgY29sID0gY29sICsgKGNvbE1vZCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgfVxuICAgIGNvbnN0IHJlY2VpdmVBdHRhY2sgPSAocm93LCBjb2wpID0+IHtcbiAgICAgICAgYXR0YWNrc1tyb3ddW2NvbF0gPSAnaGl0JztcbiAgICAgICAgaWYoc2hpcEdyaWRbcm93XVtjb2xdKXtcbiAgICAgICAgICAgIHNoaXBHcmlkW3Jvd11bY29sXS5oaXQoKTtcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coc2hpcEdyaWRbcm93XVtjb2xdLmdldElEKCkgKyBcIiB3YXMgaGl0IFwiICsgXG4gICAgICAgICAgICAvL3NoaXBHcmlkW3Jvd11bY29sXS5nZXRIaXRzU3VzdGFpbmVkKCkgKyBcIiB0aW1lcy5cIik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBpc1ZhbGlkQXR0YWNrID0gKHJvdywgY29sKSA9PiB7XG4gICAgICAgIHJldHVybiBpbkJvdW5kcyhyb3csIGNvbCkgJiYgYXR0YWNrc1tyb3ddW2NvbF0gPT09IG51bGw7XG4gICAgfVxuICAgIGNvbnN0IGlzRGVmZWF0ZWQgPSAoKSA9PiB7XG4gICAgICAgIGZvcihsZXQgc2hpcCBvZiBzaGlwQXJyKXtcbiAgICAgICAgICAgIGlmKCFzaGlwLmlzU3VuaygpKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgY29uc3QgaW5pdERlZmF1bHRTaGlwcyA9ICgpID0+IHtcbiAgICAgICAgbGV0IHNoaXBfMSA9IHNoaXBGYWN0b3J5KCA0LCdhJywgJ2Vhc3QnKTtcbiAgICAgICAgcGxhY2VTaGlwKHNoaXBfMSwgMCwgNCk7XG4gICAgICAgIHNoaXBBcnIucHVzaChzaGlwXzEpO1xuXG4gICAgICAgIGxldCBzaGlwXzIgPSBzaGlwRmFjdG9yeSggMiwnYicsICdzb3V0aCcpO1xuICAgICAgICBwbGFjZVNoaXAoc2hpcF8yLCAwLCA5KTtcbiAgICAgICAgc2hpcEFyci5wdXNoKHNoaXBfMik7XG5cbiAgICAgICAgbGV0IHNoaXBfMyA9IHNoaXBGYWN0b3J5KCAyLCdjJywgJ2Vhc3QnKTtcbiAgICAgICAgcGxhY2VTaGlwKHNoaXBfMywgMiwgMCk7XG4gICAgICAgIHNoaXBBcnIucHVzaChzaGlwXzMpO1xuXG4gICAgICAgIGxldCBzaGlwXzQgPSBzaGlwRmFjdG9yeSggMywnZCcsICdzb3V0aCcpO1xuICAgICAgICBwbGFjZVNoaXAoc2hpcF80LCAzLCA0KTtcbiAgICAgICAgc2hpcEFyci5wdXNoKHNoaXBfNCk7XG5cbiAgICAgICAgbGV0IHNoaXBfNSA9IHNoaXBGYWN0b3J5KCAxLCdlJywgJ3NvdXRoJyk7XG4gICAgICAgIHBsYWNlU2hpcChzaGlwXzUsIDMsIDYpO1xuICAgICAgICBzaGlwQXJyLnB1c2goc2hpcF81KTtcblxuICAgICAgICBsZXQgc2hpcF82ID0gc2hpcEZhY3RvcnkoIDMsJ2YnLCAnc291dGgnKTtcbiAgICAgICAgcGxhY2VTaGlwKHNoaXBfNiwgNCwgOSk7XG4gICAgICAgIHNoaXBBcnIucHVzaChzaGlwXzYpO1xuXG4gICAgICAgIGxldCBzaGlwXzcgPSBzaGlwRmFjdG9yeSggMiwnZycsICdlYXN0Jyk7XG4gICAgICAgIHBsYWNlU2hpcChzaGlwXzcsIDUsIDApO1xuICAgICAgICBzaGlwQXJyLnB1c2goc2hpcF83KTtcblxuICAgICAgICBsZXQgc2hpcF84ID0gc2hpcEZhY3RvcnkoMSwgJ2gnKTtcbiAgICAgICAgcGxhY2VTaGlwKHNoaXBfOCwgOCwgMCk7XG4gICAgICAgIHNoaXBBcnIucHVzaChzaGlwXzgpO1xuXG4gICAgICAgIGxldCBzaGlwXzkgPSBzaGlwRmFjdG9yeSgxLCAnaScpO1xuICAgICAgICBwbGFjZVNoaXAoc2hpcF85LCA5LCA1KTtcbiAgICAgICAgc2hpcEFyci5wdXNoKHNoaXBfOSk7XG5cbiAgICAgICAgbGV0IHNoaXBfMTAgPSBzaGlwRmFjdG9yeSgxLCAnaicpO1xuICAgICAgICBwbGFjZVNoaXAoc2hpcF8xMCwgOSwgOSk7XG4gICAgICAgIHNoaXBBcnIucHVzaChzaGlwXzEwKTtcbiAgICB9XG5cbiAgICBjb25zdCBnZXRTaGlwR3JpZCA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIHNoaXBHcmlkO1xuICAgIH1cblxuICAgIHJldHVybiB7IHBsYWNlU2hpcCwgcmVjZWl2ZUF0dGFjaywgaXNWYWxpZEF0dGFjaywgaXNEZWZlYXRlZCwgaW5pdERlZmF1bHRTaGlwcywgZ2V0U2hpcEdyaWQgfTtcbn1cblxuY29uc3QgY29tcHV0ZXJUYXJnZXRpbmdBSUZhY3RvcnkgPSAoYm9hcmQpID0+IHtcbiAgICBsZXQgbGFzdENvb3JkaW5hdGVzSGl0O1xuICAgIGxldCBoaXRTaGlwID0gZmFsc2U7XG4gICAgbGV0IGdldFJhbmQgPSAoKSA9PiB7XG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCk7XG4gICAgfVxuICAgIGxldCBwaWNrVGFyZ2V0U2ltcGxlID0gKCkgPT4ge1xuICAgICAgICBsZXQgcm93ID0gZ2V0UmFuZCgpO1xuICAgICAgICBsZXQgY29sID0gZ2V0UmFuZCgpO1xuICAgICAgICB3aGlsZSghYm9hcmQuaXNWYWxpZEF0dGFjayhyb3csIGNvbCkpe1xuICAgICAgICAgICAgcm93ID0gZ2V0UmFuZCgpO1xuICAgICAgICAgICAgY29sID0gZ2V0UmFuZCgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7cm93LCBjb2x9O1xuICAgIH1cblxuICAgIHJldHVybiB7IHBpY2tUYXJnZXRTaW1wbGUgfTtcblxufVxuXG5cblxuY29uc3QgZ2FtZU1hc3RlckZhY3RvcnkgPSAoKSA9PiB7XG4gICAgY29uc3QgYm9hcmRfcGxheWVyID0gZ2FtZUJvYXJkRmFjdG9yeSgpO1xuICAgIGNvbnN0IGJvYXJkX2NvbXB1dGVyID0gZ2FtZUJvYXJkRmFjdG9yeSgpO1xuICAgIGJvYXJkX3BsYXllci5pbml0RGVmYXVsdFNoaXBzKCk7XG4gICAgY29uc3QgY29tcHV0ZXJUYXJnZXRpbmdBSSA9IGNvbXB1dGVyVGFyZ2V0aW5nQUlGYWN0b3J5KGJvYXJkX2NvbXB1dGVyKTtcbiAgICBsZXQgYXR0YWNrTG9jYXRpb247XG4gICAgY29uc3QgcnVuR2FtZUxvb3AgPSAoKSA9PiB7XG4gICAgICAgIHdoaWxlKHRydWUpe1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBhdHRhY2tMb2NhdGlvbiA9IGdldFBsYXllckF0dGFja0Nvb3JkaW5hdGVzKCk7XG4gICAgICAgICAgICBib2FyZF9jb21wdXRlci5yZWNlaXZlQXR0YWNrKGF0dGFja0xvY2F0aW9uLnJvdywgYXR0YWNrTG9jYXRpb24uY29sKTtcbiAgICAgICAgICAgIGlmKGJvYXJkX2NvbXB1dGVyLmlzRGVmZWF0ZWQoKSl7XG4gICAgICAgICAgICAgICAgLy9oYW5kbGUgY29tcHV0ZXIgdmljdG9yeVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBhdHRhY2tMb2NhdGlvbiA9IGNvbXB1dGVyVGFyZ2V0aW5nQUkucGlja1RhcmdldFNpbXBsZSgpO1xuICAgICAgICAgICAgYm9hcmRfcGxheWVyLnJlY2VpdmVBdHRhY2soYXR0YWNrTG9jYXRpb24ucm93LCBhdHRhY2tMb2NhdGlvbi5jb2wpO1xuICAgICAgICAgICAgaWYoYm9hcmRfcGxheWVyLmlzRGVmZWF0ZWQoKSl7XG4gICAgICAgICAgICAgICAgLy9oYW5kbGUgY29tcHV0ZXIgdmljdG9yeVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGdldFNoaXBHcmlkID0gKCkgPT4ge1xuICAgICAgICByZXR1cm4gYm9hcmRfcGxheWVyLmdldFNoaXBHcmlkKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgcnVuR2FtZUxvb3AsIGdldFNoaXBHcmlkIH07XG59XG5cbmNvbnN0IGluaXRpYXRlU2l0ZSA9ICgpID0+IHtcbiAgICBsZXQgZ2FtZSA9IGdhbWVNYXN0ZXJGYWN0b3J5KCk7XG4gICAgc2V0VXAoZ2FtZS5nZXRTaGlwR3JpZCgpKTtcbn1cblxuXG5cbmluaXRpYXRlU2l0ZSgpO1xuXG5cblxuZXhwb3J0IHsgXG4gICAgc2hpcEZhY3RvcnksXG4gICAgZ2FtZUJvYXJkRmFjdG9yeVxufTsiXSwibmFtZXMiOlsiY29udGFpbmVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaGVhZGVyIiwiY3JlYXRlRWxlbWVudCIsIm1haW4iLCJmb290ZXIiLCJhcHBlbmRDaGlsZCIsImNyZWF0ZUNlbGwiLCJteVJvdyIsIm15Q29sIiwib3V0cHV0IiwiY2xhc3NMaXN0IiwiYWRkIiwiZGF0YXNldCIsInJvdyIsImNvbCIsImNyZWF0ZVRhYmxlSGVhZGVyIiwiY29udGVudCIsInRleHRDb250ZW50IiwiY3JlYXRlUm93Iiwicm93TnVtYmVyIiwic2V0VXAiLCJzaGlwR3JpZCIsInRhYmxlIiwibXlUYWJsZSIsImNyZWF0ZVRvcFJvdyIsImNyZWF0ZVRhYmxlIiwiY2VsbCIsImNoaWxkcmVuIiwibXlEaXYiLCJkaXNwbGF5U2hpcHMiLCJzaGlwRmFjdG9yeSIsImxlbiIsInNoaXBJRCIsImRpciIsImlkIiwibGVuZ3RoIiwiZGlyZWN0aW9uIiwiaGl0c1N1c3RhaW5lZCIsInN1bmsiLCJnZXRIaXRzU3VzdGFpbmVkIiwiaGl0IiwiaXNTdW5rIiwiZ2V0TGVuZ3RoIiwiZ2V0RGlyZWN0aW9uIiwiZ2V0SUQiLCJnYW1lQm9hcmRGYWN0b3J5IiwiQXJyYXkiLCJmaWxsIiwibWFwIiwiYXR0YWNrcyIsInNoaXBBcnIiLCJpbkJvdW5kcyIsInBsYWNlU2hpcCIsInNoaXAiLCJyb3dNb2QiLCJjb2xNb2QiLCJpIiwiaXNWYWxpZFNoaXBQbGFjZW1lbnQiLCJFcnJvciIsInB1c2giLCJyZWNlaXZlQXR0YWNrIiwiaXNWYWxpZEF0dGFjayIsImlzRGVmZWF0ZWQiLCJpbml0RGVmYXVsdFNoaXBzIiwic2hpcF8xIiwic2hpcF8yIiwic2hpcF8zIiwic2hpcF80Iiwic2hpcF81Iiwic2hpcF82Iiwic2hpcF83Iiwic2hpcF84Iiwic2hpcF85Iiwic2hpcF8xMCIsImdldFNoaXBHcmlkIiwiZ2FtZSIsImJvYXJkX3BsYXllciIsImJvYXJkX2NvbXB1dGVyIiwiY29tcHV0ZXJUYXJnZXRpbmdBSSIsImJvYXJkIiwiZ2V0UmFuZCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInBpY2tUYXJnZXRTaW1wbGUiLCJjb21wdXRlclRhcmdldGluZ0FJRmFjdG9yeSIsImF0dGFja0xvY2F0aW9uIiwicnVuR2FtZUxvb3AiLCJnZXRQbGF5ZXJBdHRhY2tDb29yZGluYXRlcyIsImdhbWVNYXN0ZXJGYWN0b3J5IiwiaW5pdGlhdGVTaXRlIl0sInNvdXJjZVJvb3QiOiIifQ==